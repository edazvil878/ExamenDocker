# docker run -d --name mi-mongo --net mi-mysql-red -v mi-mysql-vol:/data/db mongo
services:
  mi-mongo:
    image: mongo
    container_name: mi-mongo # --name mi-mongo
    stdin_open: true # -i
    tty: true # -t
    networks:
      mongo-node-net:
        ipv4_address: 172.40.0.10
    volumes:
      - mongo-vol:/data/db
    ports:
      - "8081"

  mi-node:
    build:
      context: .
      dockerfile: Dockerfile
    image: mi-node-image
    container_name: mi-node
    stdin_open: true # -i
    tty: true # -t
    networks:
      mongo-node-net:
        ipv4_address: 172.40.0.11
      node-nginx-net:
        ipv4_address: 172.80.0.10
    ports:
      - "8080"

  mi-nginx:
    image: nginx
    container_name: mi-nginx
    stdin_open: true
    tty: true
    networks:
      node-nginx-net:
        ipv4_address: 172.80.0.11
    ports:
      - "80:80"

networks:
  mongo-node-net:
    ipam:
      driver: default
      config:
        - subnet: 172.40.0.0/16

  node-nginx-net:
    ipam:
      driver: default
      config:
        - subnet: 172.80.0.0/16

volumes:
  mongo-vol:


